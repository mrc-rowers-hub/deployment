services:
  wiremock:
    image: wiremock/wiremock:2.35.0
    command: "--global-response-templating --verbose"
    volumes:
      - ./wiremock:/home/wiremock
    ports:
      - "5050:8080"

  mysql:
    image: mysql:8.0
    container_name: mrc-mysql
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: crm
    ports:
      - "3307:3306"
    networks:
      - mrc-network

  mysql-2:
    image: mysql:8.0
    container_name: mrc-mysql-2
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: mrc_resources
    ports:
      - "3308:3306"
    networks:
      - mrc-network

  mysql-3:
    image: mysql:8.0
    container_name: mrc-mysql-3
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: rowers_hub
    ports:
      - "3309:3306"
    networks:
      - mrc-network

  mrc-condition-checker:
    build:
      context: ../../mrc-condition-checker/condition-checker
      dockerfile: Dockerfile
    container_name: mrc-condition-checker
    ports:
      - "8080:8080"
    environment:
      OPENWEATHER_API_KEY: "30e37ff4eced9848ff7533eb14b0c685"
    networks:
      - mrc-network
      - default

  mrc-members-hub:
    build:
      context: ../../mrc-members-hub/row-your-boat
      dockerfile: Dockerfile
    container_name: mrc-members-hub
    ports:
      - "8082:8082"
    environment:
      - WEATHER_SERVICE_URL=http://mrc-condition-checker:8080/
      - SCHEDULER_SERVICE_URL=http://mrc-scheduler-service:8081/
      - RESOURCES_SERVICE_URL=http://mrc-resources:8083/
    networks:
      - mrc-network
      - default

  mrc-resources:
    build:
      context: ../../mrc-resources
      dockerfile: Dockerfile
    container_name: mrc-resources
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mrc-mysql-2:3306/mrc_resources?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    networks:
      - mrc-network
      - default

  mrc-scheduler-service:
    build:
      context: ../../mrc-scheduler-service/scheduler-service
      dockerfile: Dockerfile
    container_name: mrc-scheduler-service
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mrc-mysql-3:3306/rowers_hub?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    networks:
      - mrc-network
      - default

  mrc-crm:
    build:
      context: ../../mrc-crm
      dockerfile: Dockerfile
    container_name: mrc-crm
    ports:
      - "8085:8085"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mrc-mysql:3306/crm?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: ${DB_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - mysql
    networks:
      - mrc-network
      - default

networks:
  mrc-network:
    driver: bridge
  default:
    driver: bridge
